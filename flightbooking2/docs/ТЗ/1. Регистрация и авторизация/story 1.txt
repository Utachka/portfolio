Заголовок и описание истории (Story):
    Как новый пользователь, я хочу создать аккаунт, чтобы получить доступ к системе.


Описание Use Case:
    Акторы:
        Пользователь (новый пользователь системы)
        Зарегистрированный пользователь (пользователь у которого есть учетная запись в системе)
        Авторизованный пользователь (зарегистрированный пользователь, который прошел процесс авторизации)

Основной поток:
    1. Пользователь открывает главную страницу веб-приложение.
    2. Система проводит проверку, авторизован ли пользователь, если не авторизован отображает главную страницу приложения, на которое есть кнопка входа в систему.
    3. Пользователь нажимает кнопку войти.
    4. Система отображает страницу входа в систему.
    5. Пользователь нажимает кнопку зарегистрироваться.
    6. Система отображает страницу регистрации.
    7. Пользователь заполняет данные формы и нажимает кнопку зарегистрироваться.
    8. Система проводит валидацию введенных данных на корректность и соответствие политике безопасности.
    9. Система проверяет наличие такого пользователя в системе.
    10. Система создает новую учетную запись.
    11. Система авторизует зарегистрированного пользователя в системе и предоставляет права на доступ к данным для авторизованных пользователей.
    12. Система отображает главную страницу приложения, где отображен логин авторизованного пользователя и кнопка выхода из системы.

Альтернативные потоки:
    Шаг 2: Если пользователь авторизован, то система отображает главную страницу приложения, имя авторизованного пользователя и кнопку выхода из системы
    Шаг 8: Введенные данные пользователя не прошли валидацию и система отобразит ту же страницу с сообщением о том, что он не верно ввел данные в форму
    Шаг 9: Система обнаружила такого пользователя в базе данных и отобразила пользователю повторно форму регистрации с сообщением о том, что такой пользователь уже есть в системе.


Описание REST API:
     /register/:
        post:
          summary: Регистрация пользователя
          description: Позволяет пользователю зарегистрироваться в системе
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username:
                      type: string
                      description: Имя пользователя
                    password:
                      type: string
                      description: Пароль пользователя
                  required:
                    - username
                    - password
          responses:
            '200':
              description: Успешная регистрация пользователя
            '400':
              description: Ошибка валидации данных
          examples:
            'application/json':
              - name: Пример запроса
                value: |
                  {
                    "username": "john_doe",
                    "password": "secret"
                  }
              - name: Пример ответа
                value: |
                  {
                    "message": "Успешная регистрация пользователя"
                  }


Диаграмма последовательности (Sequence Diagram):
    /register.drawio